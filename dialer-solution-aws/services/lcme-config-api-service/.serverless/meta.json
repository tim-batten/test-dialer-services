{
  "C:\\Not_OneDrive\\temp\\test-dialer-services\\dialer-solution-aws\\services\\lcme-config-api-service\\serverless.yml": {
    "versionFramework": "4.10.0",
    "servicePath": "C:\\Not_OneDrive\\temp\\test-dialer-services\\dialer-solution-aws\\services\\lcme-config-api-service\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "lcme-config-api",
      "provider": {
        "name": "aws",
        "runtime": "nodejs16.x",
        "stage": "dev",
        "region": "us-east-1",
        "memorySize": 1024,
        "timeout": 30,
        "environment": {
          "NODE_ENV": "dev"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "connect:*",
              "logs:*"
            ],
            "Resource": "*"
          }
        ],
        "versionFunctions": true
      },
      "functions": {
        "api": {
          "handler": "dist/index.handler",
          "events": [
            {
              "http": {
                "path": "/{proxy+}",
                "method": "ANY",
                "cors": true
              }
            }
          ]
        }
      },
      "plugins": [
        "serverless-offline"
      ],
      "custom": {
        "serverless-offline": {
          "httpPort": 3000
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs16.x",
      "stage": "dev",
      "region": "us-east-1",
      "memorySize": 1024,
      "timeout": 30,
      "environment": {
        "NODE_ENV": "dev"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "connect:*",
            "logs:*"
          ],
          "Resource": "*"
        }
      ],
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "error": {
      "message": "Serverless plugin \"serverless-offline\" not found. Make sure it's installed and listed in the \"plugins\" section of your serverless config file. Use the --debug flag to learn more.",
      "stack": "ServerlessError2: Serverless plugin \"serverless-offline\" not found. Make sure it's installed and listed in the \"plugins\" section of your serverless config file. Use the --debug flag to learn more.\n    at PluginManager.resolveServicePlugins (file:///C:/Users/e69992/.serverless/releases/4.10.0/package/dist/sf-core.js:775:2914)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PluginManager.loadAllPlugins (file:///C:/Users/e69992/.serverless/releases/4.10.0/package/dist/sf-core.js:775:1292)\n    at async Serverless.init (file:///C:/Users/e69992/.serverless/releases/4.10.0/package/dist/sf-core.js:782:9840)\n    at async runFramework (file:///C:/Users/e69992/.serverless/releases/4.10.0/package/dist/sf-core.js:809:837)\n    at async TraditionalRunner.run (file:///C:/Users/e69992/.serverless/releases/4.10.0/package/dist/sf-core.js:805:28308)\n    at async route (file:///C:/Users/e69992/.serverless/releases/4.10.0/package/dist/sf-core.js:843:2779)\n    at async Object.run (file:///C:/Users/e69992/.serverless/releases/4.10.0/package/dist/sf-core.js:844:3661)\n    at async run2 (file:///C:/Users/e69992/.serverless/releases/4.10.0/package/dist/sf-core.js:844:4814)",
      "code": "PLUGIN_NOT_FOUND"
    },
    "serviceRawFile": "service: lcme-config-api\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs16.x\r\n  stage: ${opt:stage, 'dev'}\r\n  region: ${opt:region, 'us-east-1'}\r\n  memorySize: 1024\r\n  timeout: 30\r\n\r\n  # Environment variables - you can add more as needed\r\n  environment:\r\n    NODE_ENV: ${opt:stage, 'dev'}\r\n    # Add other environment variables from your .env files here\r\n    # These will replace the env-cmd loading mechanism\r\n\r\n  # Define the IAM role permissions\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - connect:*\r\n        - logs:*\r\n      Resource: \"*\"\r\n    # Add any other permissions your Lambda needs\r\n\r\nfunctions:\r\n  api:\r\n    handler: dist/index.handler\r\n    events:\r\n      - http:\r\n          path: /{proxy+}\r\n          method: ANY\r\n          cors: true\r\n\r\nplugins:\r\n  - serverless-offline\r\n\r\ncustom:\r\n  serverless-offline:\r\n    httpPort: 3000\r\n",
    "command": [
      "offline"
    ],
    "options": {},
    "orgId": "40d96e3f-6bcd-4a81-81ca-40c37e3ac15a",
    "orgName": "newco",
    "userId": "GLjX6zf2FZpY9jzjyT",
    "userName": "newco",
    "serviceProviderAwsAccountId": "825620938128",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}